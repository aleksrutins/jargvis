{"version":3,"sources":["../src/options.js","../src/constants.js","../src/create-element.js","../src/component.js","../src/render.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js","../src/diff/catch-error.js","../src/index.js","util/imgUrl.ts","components/TermDisplay.tsx","components/Sidebar.tsx","node_modules/fuse.js/dist/fuse.esm.js","components/App.tsx","terms.json","app.tsx"],"names":["options","isValidElement","rerenderQueue","defer","prevDebounce","IS_HYDRATE","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","push","defaultProps","createVNode","original","vnode","undefined","constructor","createRef","current","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","newDom","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","placeChild","value","unmount","applyRef","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","nameLower","proxy","cssText","replace","toLowerCase","slice","_listeners","eventProxyCapture","eventProxy","addEventListener","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","event","reorderChildren","newVNode","tmp","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","checked","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","ctor","handled","wasHydrating","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","__source","__self","defaults","Fuse","getTag","INFINITY","baseToString","result","toString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","isBlank","trim","Object","EXTENDED_SEARCH_UNAVAILABLE","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","keys","_keys","_keyMap","totalWeight","forEach","createKey","weight","id","keyId","JSON","stringify","path","src","createKeyPath","createKeyId","Error","split","join","get","list","arr","deepGet","index","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","getFn","ignoreLocation","ignoreFieldNorm","Config","SPACE","norm","mantissa","cache","Map","numTokens","match","has","n","parseFloat","Math","sqrt","toFixed","set","clear","FuseIndex","isCreated","setIndexRecords","docs","records","_keysMap","doc","docIndex","_addString","_addObject","size","item","record","v","$","keyIndex","stack","subRecords","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","setKeys","map","setSources","create","parseIndex","transformMatches","matches","indices","refIndex","transformScore","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","charMatch","charAt","isMatch","createPatternAlphabet","char","BitapSearch","chunks","addChunk","startIndex","alphabet","remainder","substr","allIndices","totalScore","hasMatches","BaseMatch","getMatch","multiRegex","singleRegex","exp","ExactMatch","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","searchIn","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","MultiMatchSet","Set","ExtendedSearch","numMatches","qLen","pLen","_","registeredSearchers","register","createSearcher","searcherClass","condition","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","operator","_keyStore","setCollection","_docs","_myIndex","add","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","format","computeScore$1","expression","resultMap","expResults","evaluate","_findMatches","getValueForItemAtKeyId","res","pow","Number","EPSILON","transformers","transformer","version","config","module","exports","terms","term","definition","img"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we\n\t// are in hydration mode or not by passing `IS_HYDRATE` instead of a\n\t// DOM element.\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.childNodes.length\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\tProvider(props, subs, ctx) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tsubs = [];\n\t\t\t\tctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../index').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (typeof childVNode == 'string' || typeof childVNode == 'number') {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._dom != null || childVNode._component != null) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tnewDom = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\toldDom = placeChild(\n\t\t\t\tparentDom,\n\t\t\t\tchildVNode,\n\t\t\t\toldVNode,\n\t\t\t\toldChildren,\n\t\t\t\texcessDomChildren,\n\t\t\t\tnewDom,\n\t\t\t\toldDom\n\t\t\t);\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type == 'option') {\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type != 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nexport function placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\texcessDomChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\texcessDomChildren == oldVNode ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t// The values only have the same type when `null`.\n\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture, nameLower, proxy;\n\n\tif (isSvg && name == 'className') name = 'class';\n\n\t// if (isSvg) {\n\t// \tif (name === 'className') name = 'class';\n\t// } else if (name === 'class') name += 'Name';\n\n\tif (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tnameLower = name.toLowerCase();\n\t\tif (nameLower in dom) name = nameLower;\n\t\tname = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tproxy = useCapture ? eventProxyCapture : eventProxy;\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, proxy, useCapture);\n\t\t} else {\n\t\t\tdom.removeEventListener(name, proxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\tname !== 'size' &&\n\t\tname !== 'download' &&\n\t\tname !== 'href' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n\t\tif (name !== (name = name.replace(/xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tvalue == null ||\n\t\t\t(value === false &&\n\t\t\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t\t\t// The value `false` is different from the attribute not\n\t\t\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t\t\t// that other VDOM frameworks also always stringify `false`.\n\t\t\t\t!/^ar/.test(name))\n\t\t) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, placeChild } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\nfunction reorderChildren(newVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\tconst vnode = newVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\tvnode._parent = newVNode;\n\n\t\t\tif (vnode._dom) {\n\t\t\t\tif (typeof vnode.type == 'function' && vnode._children.length > 1) {\n\t\t\t\t\treorderChildren(vnode, oldDom, parentDom);\n\t\t\t\t}\n\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tnewVNode._children,\n\t\t\t\t\tnull,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\n\t\t\t\tif (typeof newVNode.type == 'function') {\n\t\t\t\t\tnewVNode._nextDom = oldDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\treorderChildren(newVNode, oldDom, parentDom);\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t((newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type) ||\n\t\t\t\t\tdom == child)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(\n\t\t\t\t\tnewVNode.type,\n\t\t\t\t\tnewProps.is && { is: newProps.is }\n\t\t\t  );\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (newVNode.type === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (newVNode.type === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","// import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tconst wasHydrating = vnode._hydrating;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\tvnode._hydrating = wasHydrating;\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {string} [__source]\n * @param {string} [__self]\n */\nfunction createVNode(type, props, key, __source, __self) {\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref: props && props.ref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: ++options._vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tlet defaults, i;\n\tif (typeof type === 'function' && (defaults = type.defaultProps)) {\n\t\tfor (i in defaults) if (props[i] === undefined) props[i] = defaults[i];\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n","export function imgUrl(img: string): string {\n    if(location.hostname == \"munchkinhalfling.github.com\") { // On GH pages\n        return `https://github.com/munchkinhalfling/jargvis/raw/master/imgs/${img}`;\n    } else {\n        return img;\n    }\n}","import { h, Component } from 'preact';\nimport Term from '../util/Term';\nimport {imgUrl} from '../util/imgUrl';\nexport default class TermDisplay extends Component<{term: Term}> {\n    render({term}: {term: Term}) {\n        return (<div>\n            <h2>{term.term}</h2>\n            <p>{term.definition}</p>\n            <img src={imgUrl(term.img)} width=\"400\" height=\"300\" alt={term.term} title={term.term}></img>\n        </div>\n        )\n    }\n}","import { Component, createRef } from 'preact';\n\ninterface SidebarProps {\n    onSearch(searchStr: string): void;\n    onAboutClicked(): void;\n}\ninterface SidebarState {\n    searching: boolean;\n}\n\nexport default class Sidebar extends Component<SidebarProps, SidebarState> {\n    searchBox = createRef();\n    searchBtn = createRef();\n    constructor(props) {\n        super(props);\n        this.state = {searching: false};\n    }\n    render() {\n        return (\n            <>\n                <div className=\"sidebar\">\n                    <button className={\"sidebar-btn material-icons md-48\" + (this.state.searching? ' toggle-on' : '')} onClick={this.search.bind(this)} ref={this.searchBtn}>search</button>\n                    <button className=\"sidebar-btn material-icons md-48\" onClick={this.props.onAboutClicked}>help</button>\n                </div>\n                {(this.state.searching? <input type=\"text\" className=\"searchbox\" placeholder=\"Search\" ref={this.searchBox} onInput={this.searchBoxKeyPressed.bind(this)} autofocus/> : null)}\n            </>\n        )\n    }\n    search() {\n        this.setState({searching: !this.state.searching});\n        if(this.searchBox.current) {\n            this.searchBox.current.focus();\n        } else {\n            this.searchBtn.current.blur();\n        }\n    }\n    searchBoxKeyPressed() {\n        console.log(\"Searching \" + this.searchBox.current.value);\n        this.props.onSearch(this.searchBox.current.value);\n    }\n}","/**\n * Fuse.js v6.4.3 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2020 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const n = parseFloat((1 / Math.sqrt(numTokens)).toFixed(mantissa));\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 1 : 0,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\n// Practical scoring function\nfunction computeScore$1(results, { ignoreFieldNorm = Config.ignoreFieldNorm }) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nFuse.version = '6.4.3';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","import { Component, Fragment, createRef } from 'preact';\nimport Term from \"../util/Term\";\nimport TermDisplay from './TermDisplay';\nimport Sidebar from './Sidebar';\nimport Fuse from \"fuse.js\";\n\ninterface AppProps {\n    terms: Term[]\n}\ninterface AppState {\n    filteredTerms: Term[];\n}\n\nexport default class App extends Component<AppProps, AppState> {\n    termsDiv = createRef();\n    aboutDlg = createRef();\n    constructor(props: AppProps) {\n        super(props);\n        this.state = {filteredTerms: props.terms};\n    }\n    render({ }: AppProps, { filteredTerms }: AppState) {\n        return (\n        <>\n            <Sidebar onSearch={this.search.bind(this)} onAboutClicked={this.aboutClicked.bind(this)}/>\n            <div id=\"main\">\n                <div className=\"header\">\n                    <h1>Jargon Visualized</h1>\n                </div>\n                <div id=\"terms\" ref={this.termsDiv}>\n                    {filteredTerms.map(term => \n                        <TermDisplay term={term}/>\n                    )}\n                </div>\n                <dialog className=\"about-dialog\" ref={this.aboutDlg}>\n                    <button className=\"close-dialog\" onClick={() => this.aboutDlg.current.removeAttribute('open')}>&times;</button>\n                    <h1>About</h1>\n                    <p>\n                        Created with:\n                        <ul>\n                            <li>Preact</li>\n                            <li>TypeScript</li>\n                            <li>Gitpod</li>\n                            <li>Material Icons</li>\n                            <li>Parcel</li>\n                        </ul>\n                    </p>\n                </dialog>\n            </div>\n        </>\n        )\n    }\n    search(searchText: string) {\n        const { terms } = this.props;\n        if(!this.termsDiv.current) return;\n        const fuse = new Fuse<Term>(terms, { keys: [\"term\", \"definition\"] });\n        const result = fuse.search(searchText);\n        this.setState({ filteredTerms: result.map(fuseTerm => fuseTerm.item) });\n        if(searchText.length == 0) this.setState({ filteredTerms: terms });\n    }\n    aboutClicked() {\n        this.aboutDlg.current.setAttribute(\"open\", \"\");\n    }\n}","module.exports={terms:[{term:\"Resource Hog\",definition:\"A computer program that uses up an unreasonable amount of memory.\",img:\"rhog.png\"}]};","import { h, render } from 'preact';\nimport App from './components/App';\nimport terms from './terms.json';\nimport './styles/app.scss';\n\nrender((<App terms={terms.terms}></App>), document.querySelector(\"#app\"));\n"]}